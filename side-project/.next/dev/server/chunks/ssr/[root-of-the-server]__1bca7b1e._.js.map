{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/akbar/nextjs-project/my-next-app/side-project/app/page.jsx"],"sourcesContent":["async function getCatFacts() {\n    const response = await fetch(\"https://catfact.ninja/facts\")\n    const data = await response.json()\n    return data.data\n}\n\nexport default async function Home({ searchParams }) {\n    const { query } = await searchParams\n    const catFacts = await getCatFacts()\n\n    const filteredFacts = query\n        ? catFacts.filter(obj => obj.fact.toLowerCase().includes(query.toLowerCase()))\n        : catFacts\n\n    return (\n        <div className=\"page\">\n            <main className=\"main\">\n                <h1>üêà‚Äç‚¨õ Cat Facts üêà</h1>\n                <form className=\"search-form\">\n                    <label htmlFor=\"cat-fact-query\" className=\"sr-only\">\n                        Search cat facts\n                    </label>\n                    <input\n                        type=\"search\"\n                        id=\"cat-fact-query\"\n                        name=\"query\"\n                        placeholder=\"Search cat facts...\"\n                        className=\"search-input\"\n                        autoComplete=\"off\"\n                        defaultValue={query}\n                    />\n                </form>\n                <div className=\"facts-list\">\n                    {filteredFacts.map((fact, index) => (\n                        <div key={index} className=\"fact-card\">\n                            <p className=\"fact-text\">{fact.fact}</p>\n                        </div>\n                    ))}\n                </div>\n            </main>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;;;AAAA,eAAe;IACX,MAAM,WAAW,MAAM,MAAM;IAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI;AACpB;AAEe,eAAe,KAAK,EAAE,YAAY,EAAE;IAC/C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM;IACxB,MAAM,WAAW,MAAM;IAEvB,MAAM,gBAAgB,QAChB,SAAS,MAAM,CAAC,CAAA,MAAO,IAAI,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,WAAW,OACxE;IAEN,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAK,WAAU;;8BACZ,8OAAC;8BAAG;;;;;;8BACJ,8OAAC;oBAAK,WAAU;;sCACZ,8OAAC;4BAAM,SAAQ;4BAAiB,WAAU;sCAAU;;;;;;sCAGpD,8OAAC;4BACG,MAAK;4BACL,IAAG;4BACH,MAAK;4BACL,aAAY;4BACZ,WAAU;4BACV,cAAa;4BACb,cAAc;;;;;;;;;;;;8BAGtB,8OAAC;oBAAI,WAAU;8BACV,cAAc,GAAG,CAAC,CAAC,MAAM,sBACtB,8OAAC;4BAAgB,WAAU;sCACvB,cAAA,8OAAC;gCAAE,WAAU;0CAAa,KAAK,IAAI;;;;;;2BAD7B;;;;;;;;;;;;;;;;;;;;;AAQlC","debugId":null}}]
}